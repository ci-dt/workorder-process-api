<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:api-platform-gw="http://www.mulesoft.org/schema/mule/api-platform-gw" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/api-platform-gw http://www.mulesoft.org/schema/mule/api-platform-gw/current/mule-api-platform-gw.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
    <http:listener-config name="api-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="api-config" raml="api.raml" consoleEnabled="false" doc:name="Router"/>
    <api-platform-gw:api apiName="WorkOrder_ProcessAPI" version="1.0" flowRef="api-main" create="true" apikitRef="api-config" doc:name="API Autodiscovery"/>
    <http:request-config name="OpenXSConn" host="openxs-system-api.eu.cloudhub.io" port="80" basePath="/api" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="https://anypoint.mulesoft.com/apiplatform/repository/v2/organizations/3d76bccd-3112-48a1-8cb7-ef93fb97570e/public/apis/19474162/versions/416757/files/root"/>
    </http:request-config>
    <http:request-config name="SAPConn" host="sap-system-api-1.eu.cloudhub.io" port="80" basePath="/api" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="https://anypoint.mulesoft.com/apiplatform/repository/v2/organizations/3d76bccd-3112-48a1-8cb7-ef93fb97570e/public/apis/19443428/versions/413660/files/root"/>
    </http:request-config>
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="api-console">
        <http:listener config-ref="api-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="api-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="get:/part/{order_number}/operation:api-config">
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <http:request config-ref="SAPConn" path="/order/{order_number}/operation" method="GET" doc:name="Call SAP System API">
                    <http:request-builder>
                        <http:query-param paramName="client_id" value="${workorder.clientid}"/>
                        <http:query-param paramName="client_secret" value="${workorder.clientsecret}"/>
                        <http:uri-param paramName="order_number" value="#[flowVars.order_number]"/>
                    </http:request-builder>
                </http:request>
                <dw:transform-message doc:name="Transform Message">
                <dw:input-payload mimeType="application/json" />
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
                </dw:transform-message>
            </processor-chain>
            <processor-chain>
                <http:request config-ref="OpenXSConn" path="/part/{order_number}/operation" method="GET" doc:name="Call OpenXS System API">
                    <http:request-builder>
                        <http:uri-param paramName="order_number" value="#[flowVars.order_number]"/>
                        <http:query-param paramName="client_id" value="${workorder.clientid}"/>
                        <http:query-param paramName="client_secret" value="${workorder.clientsecret}"/>
                    </http:request-builder>
                </http:request>
                <dw:transform-message doc:name="Transform Message">
                  <dw:input-payload mimeType="application/json" />
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
                </dw:transform-message>
            </processor-chain>
        </scatter-gather>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        
        <!-- set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload"/ -->
        <dw:transform-message doc:name="Transform Message" metadata:id="4f227621-af32-469a-af0a-e1ffe85cd564">
            <dw:input-payload mimeType="application/json"  doc:sample="sample_data/list_json.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	operations: payload[0].operations map ((sapObject, sapIndex) -> {
		sequence_number : sapObject.sequence_number,
		due : sapObject.due,
		description : sapObject.description,
		(payload[1].operations filter ($.sequence_number as :number == sapObject.sequence_number) map (a,b) -> {
			done : a.done
		})
	}),
	order_number : flowVars.order_number
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
    </flow>
    <apikit:mapping-exception-strategy name="api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
